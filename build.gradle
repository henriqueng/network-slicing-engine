/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
}

plugins {
    id 'net.researchgate.release' version '2.3.4'
    id "nebula.os-package" version "2.2.6"
    id 'com.github.sherter.google-java-format' version '0.3.2'
}

group 'org.openbaton'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply from: 'gradle/gradle/git.release.gradle'

apply from: 'gradle/gradle/git.helpers.gradle'
apply from: 'gradle/gradle/command.line.helper.gradle'

project.ext {

    sdkVersion='6.0.0-RC2'
    //exceptionVersion='5.2.1'
    //monitoringVersion='5.2.1'
    exceptionVersion='6.0.0-RC1'
    monitoringVersion='6.0.0-RC1'

    /**
     * Application Related Version
     */
    applicationVersion = version

    applicationRelease = isApplicationRelease()
    applicationDate = new Date()
    applicationRevision = getRevision()

    applicationVersionSnapshot = (!applicationRelease) ? ".${asUTC(applicationDate, 'yyyyMMdd')}.git${applicationRevision}" : ""
    applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"
}

dependencies {
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.5.10.RELEASE'

    compile("org.springframework.boot:spring-boot-starter-amqp")

    compile 'org.openbaton:sdk:' + sdkVersion
    compile 'org.openbaton:exception:' + exceptionVersion
    compile 'org.openbaton:monitoring:' + monitoringVersion

//    compile ('org.apache.jclouds.driver:jclouds-slf4j:1.9.2')
//    compile ('org.apache.jclouds.driver:jclouds-sshj:1.9.2')
//    compile ('org.apache.jclouds.api:openstack-nova:1.9.2')
//    compile ('org.apache.jclouds.labs:openstack-neutron:1.9.2')

    compile group: 'org.pacesys', name: 'openstack4j', version: '3.0.3'

    compile("org.springframework.boot:spring-boot-starter-web")

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.10.RELEASE'

}

bootRepackage {
    mainClass = 'org.openbaton.nse.Starter'
}

apply from: 'gradle/gradle/packaging.nse.debian.gradle'

compileJava.dependsOn tasks.googleJavaFormat
